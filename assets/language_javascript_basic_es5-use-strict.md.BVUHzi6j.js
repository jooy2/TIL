import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.CwVs45hf.js";const o=JSON.parse('{"title":"Strict Mode (엄격 모드)","description":"","frontmatter":{},"headers":[],"relativePath":"language/javascript/basic/es5-use-strict.md","filePath":"language/javascript/basic/es5-use-strict.md","lastUpdated":1733966697000}'),n={name:"language/javascript/basic/es5-use-strict.md"};function l(p,s,h,c,d,k){return t(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="strict-mode-엄격-모드" tabindex="-1">Strict Mode (엄격 모드) <a class="header-anchor" href="#strict-mode-엄격-모드" aria-label="Permalink to &quot;Strict Mode (엄격 모드)&quot;">​</a></h1><p>엄격 모드(Strict Mode)는 <strong>ES2009(ES5)</strong> 사양 이상 부터 사용할 수 있는 문법이다.</p><p>엄격 모드를 사용하면 문법적 오류에 대해 보통 암묵적으로 진행되었던 실행문을 탐지하여 문법 오류를 발생하도록 한다. 이렇게 함으로서 문법적인 실수를 사전에 방지하여 코드 실행 안정성을 보장하고 향상된 보안 코드를 작성할 수 있다.</p><p>사용을 위해서는 자바스크립트 파일 최상단에 다음 내용을 추가해야 한다.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;use strict&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &lt;&lt; Add this line</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>이렇게 되면 전체 스크립트 파일에 엄격 모드가 적용된다. 특정 함수에만 한정적으로 적용할 수도 있다.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&#39;use strict&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sub</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		// This function is also affected by strict mode</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>예를 들어 다음과 같이 선언하지 않은 변수에 값을 할당하게 된다면,</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">abc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(abc); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;Hello&#39;</span></span></code></pre></div><p>자바스크립트는 에러 없이 <code>Hello</code>를 콘솔에 출력한다. 하지만 엄격 모드를 사용하면,</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;use strict&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">abc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(abc); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Uncaught ReferenceError: abc is not defined</span></span></code></pre></div><p>콘솔 로그 실행문에서 <code>ReferenceError</code> 에러가 출력될 것이다.</p><p>이 뿐만이 아니라 엄격 모드를 사용하면 여러가지 제한 사항이 적용된다.</p><ul><li><code>delete</code>나 <code>with</code>를 사용할 수 없다.</li><li><code>if</code>, <code>while</code>, <code>for</code>과 같은 블록문 내부에 함수를 선언할 수 없다.</li><li>함수에 대해 <code>caller</code>, <code>callee</code>, <code>arguments</code>로 액세스할 수 없다.</li><li>함수의 인자의 이름이 두 번 이상 반복 될 수 없다.</li><li>미래에 사용 될 예약어(<code>private</code>, <code>public</code>, <code>let</code>, <code>static</code>...)를 변수명으로 지정할 수 없다.</li><li>객체에는 같은 속성 이름을 사용할 수 없다. (ES6 이상에서는 허용된다.)</li></ul><p>엄격 모드는 모듈이나 클래스 형식의 파일에서는 권장하지 않으며 민감한 코드를 작성하는 특수한 경우가 아닌 이상 일반적으로 사용 할 필요는 없다.</p>`,15)])])}const E=i(n,[["render",l]]);export{o as __pageData,E as default};
