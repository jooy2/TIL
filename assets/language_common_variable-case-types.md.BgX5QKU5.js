import{_ as s,c as e,o as n,ag as t}from"./chunks/framework.CwVs45hf.js";const b=JSON.parse('{"title":"변수 이름 명명 시 케이스 타입","description":"","frontmatter":{},"headers":[],"relativePath":"language/common/variable-case-types.md","filePath":"language/common/variable-case-types.md","lastUpdated":1674727405000}'),p={name:"language/common/variable-case-types.md"};function i(l,a,c,o,d,r){return n(),e("div",null,[...a[0]||(a[0]=[t(`<h1 id="변수-이름-명명-시-케이스-타입" tabindex="-1">변수 이름 명명 시 케이스 타입 <a class="header-anchor" href="#변수-이름-명명-시-케이스-타입" aria-label="Permalink to &quot;변수 이름 명명 시 케이스 타입&quot;">​</a></h1><p>변수명을 정의할 때는 프로젝트나 언어의 특성에 맞게 통일성있게 구분 기호나 대/소문자를 활용해야 한다. 아래는 대부분의 언어에서 사용되는 변수명의 케이스 타입이다.</p><h2 id="카멜-케이스-camel-case" tabindex="-1">카멜 케이스 (Camel Case) <a class="header-anchor" href="#카멜-케이스-camel-case" aria-label="Permalink to &quot;카멜 케이스 (Camel Case)&quot;">​</a></h2><p>낙타의 굴곡진 형태에 비롯한 케이스 표기법으로 첫 문자는 소문자로, 이후 단어 부터 첫 문자 마다 대문자로 표현한다. 단어 간 구분 문자가 없어 간결하게 표현할 수 있으므로 대부분의 언어에서 권장하기도 한다.</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>camelCase</span></span>
<span class="line"><span>getCompanyInfo</span></span>
<span class="line"><span>findElementById</span></span></code></pre></div><h2 id="파스칼-케이스-pascal-case" tabindex="-1">파스칼 케이스 (Pascal Case) <a class="header-anchor" href="#파스칼-케이스-pascal-case" aria-label="Permalink to &quot;파스칼 케이스 (Pascal Case)&quot;">​</a></h2><p>카멜 케이스와 유사하지만 첫 문자를 대문자로 사용한다. 주로 클래스명을 정의할 때 첫 문자를 대문자로 사용하기 때문에 특별한 경우가 아니면 잘 사용하지 않는다.</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PascalCase</span></span>
<span class="line"><span>GlobalOptions</span></span>
<span class="line"><span>SystemFileInfo</span></span></code></pre></div><h2 id="스네이크-케이스-snake-case" tabindex="-1">스네이크 케이스 (Snake Case) <a class="header-anchor" href="#스네이크-케이스-snake-case" aria-label="Permalink to &quot;스네이크 케이스 (Snake Case)&quot;">​</a></h2><p>각 단어 사이에는 언더 바(<code>_</code>)를 사용하여 구분하며 문자는 모두 소문자 또는 대문자로 변환하여 주로 사용한다. 대문자 표현의 경우 상수(<code>constant</code>)를 표현할 때 사용되기도 한다.</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>snake_case</span></span>
<span class="line"><span>get_item_info</span></span>
<span class="line"><span>file_size_humanized</span></span>
<span class="line"><span>C_MAX_UPLOAD_FILE_SIZE</span></span></code></pre></div><h2 id="케밥-케이스-kebab-case" tabindex="-1">케밥 케이스 (Kebab Case) <a class="header-anchor" href="#케밥-케이스-kebab-case" aria-label="Permalink to &quot;케밥 케이스 (Kebab Case)&quot;">​</a></h2><p>모든 문자는 소문자로 표현하고 각 단어 사이에는 대시 기호(<code>-</code>)를 사용하여 구분한다. 일부 언어에서는 대시 기호를 사용하지 못할 수 있다. <code>URL</code>을 표현할 때 자주 사용되는 형식이기도 하다.</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kebab-case</span></span>
<span class="line"><span>my-profile-info</span></span>
<span class="line"><span>system-get-platform-name</span></span></code></pre></div><h2 id="헝가리안-표기법-hungarian-notation" tabindex="-1">헝가리안 표기법 (Hungarian Notation) <a class="header-anchor" href="#헝가리안-표기법-hungarian-notation" aria-label="Permalink to &quot;헝가리안 표기법 (Hungarian Notation)&quot;">​</a></h2><p>변수 앞에 데이터 타입을 붙인다. 변수에 잘못된 데이터 타입을 넣지 않도록 명확하게 인지할 수 있고 변수를 추적하지 않는 일반 텍스트 에디터나 기타 환경에서 데이터 타입을 쉽게 확인할 수 있다. 모던 프로그래밍 언어에서는 이 표기법을 권장하지 않기도 하고 최근 IDE에서는 잘못된 데이터 타입에 대한 추적이 우수하기 때문에 가급적 사용하지 않는 것이 좋다. 데이터형을 붙일 때는 전체 이름이나 축약형(<code>b</code>, <code>i</code>, <code>str</code>)을 사용하기도 하고, 카멜 케이스와 동시에 활용하기도 한다.</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>intUserId (Integer)</span></span>
<span class="line"><span>bIsActive (Boolean)</span></span>
<span class="line"><span>strPassword (String)</span></span>
<span class="line"><span>iPrice (Integer)</span></span></code></pre></div>`,17)])])}const u=s(p,[["render",i]]);export{b as __pageData,u as default};
