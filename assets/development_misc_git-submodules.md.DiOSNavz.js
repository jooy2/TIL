import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.CwVs45hf.js";const g=JSON.parse('{"title":"Git Submodules","description":"","frontmatter":{},"headers":[],"relativePath":"development/misc/git-submodules.md","filePath":"development/misc/git-submodules.md","lastUpdated":1743501299000}'),l={name:"development/misc/git-submodules.md"};function n(p,s,h,d,k,o){return t(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="git-submodules" tabindex="-1">Git Submodules <a class="header-anchor" href="#git-submodules" aria-label="Permalink to &quot;Git Submodules&quot;">​</a></h1><p>Git 프로젝트 파일에서 별도의 Git 리포지토리의 파일을 연결하여 불러올 수 있다. 이렇게 하면 기존의 프로젝트의 Git 파일에 추가되지 않고, 모듈처럼 설치되어 관리할 수 있다.</p><h2 id="서브모듈-초기화" tabindex="-1">서브모듈 초기화 <a class="header-anchor" href="#서브모듈-초기화" aria-label="Permalink to &quot;서브모듈 초기화&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> submodule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [Repository </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">URL]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [Path]</span></span></code></pre></div><p>예를 들어 TIL 리포지토리 파일을 AAA 프로젝트 경로 루트의 /til 폴더로 불러오려면, 아래와 같이 사용한다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> submodule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:jooy2/TIL.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> til</span></span></code></pre></div><p>이 때 프로젝트 루트에 <code>.gitmodules</code> 파일이 만들어지는 것을 확인한다.</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[submodule &quot;til&quot;]</span></span>
<span class="line"><span>	path = til</span></span>
<span class="line"><span>	url = git@github.com:jooy2/TIL.git</span></span></code></pre></div><p>커밋할 때는 <code>.gitmodules</code> 파일만 커밋되어야 한다. 또한 해당 서브모듈 디렉토리의 커밋 정보가 담긴 파일을 같이 커밋해야 할 수 있다.</p><h2 id="서브모듈-업데이트" tabindex="-1">서브모듈 업데이트 <a class="header-anchor" href="#서브모듈-업데이트" aria-label="Permalink to &quot;서브모듈 업데이트&quot;">​</a></h2><p>프로젝트에서 설정된 특정 커밋으로 서브모듈을 불러온다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> submodule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span></span></code></pre></div><h2 id="서브모듈-업데이트-원격-최신-정보-pull" tabindex="-1">서브모듈 업데이트 &amp; 원격 최신 정보 pull <a class="header-anchor" href="#서브모듈-업데이트-원격-최신-정보-pull" aria-label="Permalink to &quot;서브모듈 업데이트 &amp; 원격 최신 정보 pull&quot;">​</a></h2><p>프로젝트에서 설정된 것이 아닌 서브모듈 리포지토리의 최신 커밋으로 서브모듈을 업데이트한다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> submodule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --remote</span></span></code></pre></div><h2 id="서브모듈-초기화-1" tabindex="-1">서브모듈 초기화 <a class="header-anchor" href="#서브모듈-초기화-1" aria-label="Permalink to &quot;서브모듈 초기화&quot;">​</a></h2><p>서브모듈을 사용하지 않거나 다시 설정하려는 경우 아래 방법을 사용한다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> submodule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deinit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --all</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 필요한 경우 캐시 삭제</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cached</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [path]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 필요한 경우 서브모듈 파일 삭제</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .git/modules/[path]</span></span></code></pre></div>`,18)])])}const c=i(l,[["render",n]]);export{g as __pageData,c as default};
