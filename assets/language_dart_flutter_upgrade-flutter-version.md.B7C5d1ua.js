import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.CwVs45hf.js";const o=JSON.parse('{"title":"동일한 프로젝트에서 Flutter 버전 업그레이드","description":"","frontmatter":{},"headers":[],"relativePath":"language/dart/flutter/upgrade-flutter-version.md","filePath":"language/dart/flutter/upgrade-flutter-version.md","lastUpdated":1759370313000}'),l={name:"language/dart/flutter/upgrade-flutter-version.md"};function n(p,s,h,k,r,d){return t(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="동일한-프로젝트에서-flutter-버전-업그레이드" tabindex="-1">동일한 프로젝트에서 Flutter 버전 업그레이드 <a class="header-anchor" href="#동일한-프로젝트에서-flutter-버전-업그레이드" aria-label="Permalink to &quot;동일한 프로젝트에서 Flutter 버전 업그레이드&quot;">​</a></h1><h2 id="자동-업그레이드" tabindex="-1">자동 업그레이드 <a class="header-anchor" href="#자동-업그레이드" aria-label="Permalink to &quot;자동 업그레이드&quot;">​</a></h2><p>일반적으로 Flutter 버전을 업그레이드 하려는 경우 터미널에서 다음 명령을 실행한다. 이 경우 Flutter 설치 경로의 파일이 최신 버전으로 대체된다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span></span></code></pre></div><p>Flutter 버전은 <a href="https://fvm.app" target="_blank" rel="noreferrer"><code>fvm</code></a>을 사용하여 버전 관리를 하는 것을 권장한다. 버전을 변경해가면서 앱을 테스트할 때 유용하며 환경이 서로 꼬이지 않는다.</p><p>만약 <code>fvm</code>으로 버전을 올리는 경우 아래 커맨드로 버전을 올릴 수 있다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {version}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {version}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 만약 해당 버전을 전역 프로젝트에서 기본값으로 적용하려면:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {version}</span></span></code></pre></div><p><code>.fvmrc</code> 파일이 프로젝트 루트에 존재할 경우 여기에 있는 Flutter 버전도 갱신해야 한다. <code>fvm use</code>를 사용하여 이미 지정했다면 파일이 알아서 변경될 수 있다.</p><p>Firebase를 사용 중일 때 Flutter 버전 업그레이드 후 아래 커맨드를 실행하여 현재 Dart 버전에 Flutterfire CLI를 적용해야 할 수 있다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> activate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flutterfire_cli</span></span></code></pre></div><p>Flutter의 버전이 올라가면 일부 코드 변경사항이 발생하거나 종속성 문제가 발생할 수 있다. 관련 업데이트 내용을 확인하고, 아래와 같이 종속성 점검을 실행한다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span></span></code></pre></div><p>관련 문제가 나타날 경우 아래 명령어로 현재 Flutter 버전과 호환되도록 버전을 맞추어줄 수 있다. 아래 명령어가 모든 패키지를 최신으로 업그레이드하는 것은 아니므로 참고한다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --major-versions</span></span></code></pre></div><p>안드로이드나 iOS 빌드 시 빌드 캐시로 인해 실행 문제가 발생할 수 있으므로 프로젝트 루트 폴더에서 순서대로 아래 명령을 실행한다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> precache</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ios</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ios</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Podfile.lock</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pods/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .symlinks/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Flutter/Flutter.framework</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Flutter/Flutter.podspec</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cache</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --all</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ..</span></span></code></pre></div><h2 id="수동-업그레이드-다운그레이드" tabindex="-1">수동 업그레이드 &amp; 다운그레이드 <a class="header-anchor" href="#수동-업그레이드-다운그레이드" aria-label="Permalink to &quot;수동 업그레이드 &amp; 다운그레이드&quot;">​</a></h2><p>프로젝트 업그레이드 전 열려있는 프로젝트를 닫는다.</p><p>원하는 버전의 <strong>Flutter SDK</strong>를 다운로드 한 후 환경변수에서 설정된 경로로 파일을 이동한다.</p><p>안드로이드 스튜디오를 사용하는 경우 프로젝트 경로의 <code>.idea</code> 디렉토리를 제거한다.</p><p>다시 프로젝트를 열어 인덱싱을 완료한 후 터미널에서 다음 명령을 실행한다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flutter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span></span></code></pre></div><p>빌드 시 다음 에러가 발생하는 경우가 있다.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Could not get unknown property &#39;ndkVersion&#39; for extension &#39;flutter&#39; of type FlutterExtension.</span></span></code></pre></div><p><code>android/app/build.gradle</code>에서 버전별로 다음 내용을 수정해야 할 수 있다.</p><h3 id="flutter-3-x" tabindex="-1">Flutter 3.x <a class="header-anchor" href="#flutter-3-x" aria-label="Permalink to &quot;Flutter 3.x&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>android {</span></span>
<span class="line"><span>    compileSdkVersion flutter.compileSdkVersion</span></span>
<span class="line"><span>    ndkVersion flutter.ndkVersion</span></span>
<span class="line"><span>}</span></span></code></pre></div><h3 id="flutter-2-x" tabindex="-1">Flutter 2.x <a class="header-anchor" href="#flutter-2-x" aria-label="Permalink to &quot;Flutter 2.x&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>android {</span></span>
<span class="line"><span>    compileSdkVersion {SDK Version}</span></span>
<span class="line"><span>}</span></span></code></pre></div>`,29)])])}const c=i(l,[["render",n]]);export{o as __pageData,c as default};
