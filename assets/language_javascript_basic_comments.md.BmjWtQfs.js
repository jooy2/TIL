import{_ as a,c as i,o as n,ag as e}from"./chunks/framework.CwVs45hf.js";const r=JSON.parse('{"title":"주석 (Comments)","description":"","frontmatter":{},"headers":[],"relativePath":"language/javascript/basic/comments.md","filePath":"language/javascript/basic/comments.md","lastUpdated":1733966697000}'),l={name:"language/javascript/basic/comments.md"};function t(p,s,h,c,o,d){return n(),i("div",null,[...s[0]||(s[0]=[e(`<h1 id="주석-comments" tabindex="-1">주석 (Comments) <a class="header-anchor" href="#주석-comments" aria-label="Permalink to &quot;주석 (Comments)&quot;">​</a></h1><p>자바스크립트에서의 주석은 대부분의 프로그래밍 언어와 유사한 방식으로 사용할 수 있다. 보통 한줄 주석이나 여러 줄 주석이 있으며 한줄 주석은 <code>//</code> 뒤에, 여러줄 주석은 <code>/*</code>와 <code>*/</code> 사이에 텍스트를 남긴다.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// This line is a comment.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;Hello&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* This line is a comment.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * This part of the code is also not executed.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * function Main () {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *   console.log(&#39;Hello&#39;);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Main();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * */</span></span></code></pre></div><p>주석과 텍스트 사이에는 공백이 들어가는 것이 좋다.</p><p>주석은 실행되는 코드가 아니기 때문에 여러가지 목적으로 활용된다.</p><ul><li>알기 쉬운 코드 이해를 위한 설명을 위해</li><li>테스트용으로 잠시 특정 코드의 실행을 방지하기 위해</li></ul><p>일부 IDE에서는 특수한 포맷으로 작성된 주석을 해석하여 정리하므로 여러 용도로 활용할 수 있다. 예를 들어 다음과 같이 사용한다.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// TODO: Write the Main function</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><code>TODO:</code> (공백으로 구분)를 붙여 작성하면 IDE는 할일 목록에 해당 라인의 코드를 바로가기 할 수 있는 리스트를 생성한다. 이외에도 여러가지 포맷들이 있다. (IDE마다 처리 방식이 다를 수 있으며 이 것이 공식적인 것은 아니다.)</p><ul><li><code>TODO</code>: 추후 동작에 있어 작성이나 수정이 필요한 부분</li><li><code>NOTE</code>: 코드가 동작하는데 유의할 점이나 명확하지 않은 동작에 대한 참고사항</li><li><code>FIXME</code>: 해당 코드에 대한 검토 및 재작성이 필요함</li><li><code>BUG</code>: 해당 코드에 문제가 있음</li><li><code>XXX</code>: 확실하지 않거나, 수정이 필요하거나, 완료되지 않은 부분</li></ul><p>일반적으로 자바스크립트 주석은 외부에 노출되기 때문에 중요한 코드는 주석에 포함하지 않는 것이 좋다. (컴파일러에 따라 주석을 알아서 제거해주기도 한다.)</p><p>매 코드 줄 마다 주석을 달아 설명하는 것 보다는 이해가 필요하거나 복잡한 로직을 처리하는 부분에 명확하게 작성하는 것이 바람직하다.</p>`,12)])])}const g=a(l,[["render",t]]);export{r as __pageData,g as default};
