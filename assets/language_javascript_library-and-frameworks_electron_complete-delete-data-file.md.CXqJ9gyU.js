import{_ as a,c as i,o as n,ag as e}from"./chunks/framework.CwVs45hf.js";const c=JSON.parse('{"title":"Electron 앱 파일 완전 삭제","description":"","frontmatter":{},"headers":[],"relativePath":"language/javascript/library-and-frameworks/electron/complete-delete-data-file.md","filePath":"language/javascript/library-and-frameworks/electron/complete-delete-data-file.md","lastUpdated":1733966697000}'),l={name:"language/javascript/library-and-frameworks/electron/complete-delete-data-file.md"};function t(p,s,h,r,k,d){return n(),i("div",null,[...s[0]||(s[0]=[e(`<h1 id="electron-앱-파일-완전-삭제" tabindex="-1">Electron 앱 파일 완전 삭제 <a class="header-anchor" href="#electron-앱-파일-완전-삭제" aria-label="Permalink to &quot;Electron 앱 파일 완전 삭제&quot;">​</a></h1><p>현재 실행 중인 프로세스를 제거하고 Electron 앱의 데이터 파일과 설정 파일, 설치 파일을 모두 삭제한다.</p><p>아래 문서에서 <code>{APP_NAME}</code>와 <code>{com.company.appname}</code> 부분은 각 앱 이름에 맞게 수정한다.</p><h2 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows&quot;">​</a></h2><p>Microsoft Store로 설치한 경우 앱 삭제 시 데이터가 삭제된다.</p><p><code>.exe</code>로 설치한 경우 아래 경로 파일을 삭제한다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">%APPDATA%\\Electron</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">%APPDATA%\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{APP_NAME}</span></span></code></pre></div><h2 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;Linux&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Snapcraft에서 설치했다면:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/snap/{APP_NAME}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># .deb, .rpm 패키지로 설치했다면:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.config/{APP_NAME}</span></span></code></pre></div><h2 id="macos" tabindex="-1">macOS <a class="header-anchor" href="#macos" aria-label="Permalink to &quot;macOS&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">killall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Electron</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">killall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Electron</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">killall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {APP_NAME}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">killall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {APP_NAME}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /Applications/{APP_NAME}.app</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/Library/Application</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Support/{APP_NAME}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /System/Volumes/Data/Users/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$USER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Library/Containers/{com.company.appname}</span></span></code></pre></div>`,11)])])}const F=a(l,[["render",t]]);export{c as __pageData,F as default};
