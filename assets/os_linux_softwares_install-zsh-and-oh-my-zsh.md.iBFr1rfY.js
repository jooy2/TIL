import{_ as a,c as i,o as h,ag as e}from"./chunks/framework.CwVs45hf.js";const r=JSON.parse('{"title":"리눅스 Zsh와 Oh My Zsh 설치하기","description":"","frontmatter":{},"headers":[],"relativePath":"os/linux/softwares/install-zsh-and-oh-my-zsh.md","filePath":"os/linux/softwares/install-zsh-and-oh-my-zsh.md","lastUpdated":1733966697000}'),t={name:"os/linux/softwares/install-zsh-and-oh-my-zsh.md"};function l(n,s,p,o,d,k){return h(),i("div",null,[...s[0]||(s[0]=[e('<h1 id="리눅스-zsh와-oh-my-zsh-설치하기" tabindex="-1">리눅스 <code>Zsh</code>와 <code>Oh My Zsh</code> 설치하기 <a class="header-anchor" href="#리눅스-zsh와-oh-my-zsh-설치하기" aria-label="Permalink to &quot;리눅스 `Zsh`와 `Oh My Zsh` 설치하기&quot;">​</a></h1><p><strong>Zsh</strong>(Z Shell)은 기존의 Bash Shell에서 많은 개선사항과 여러가지 확장 기능을 지원하는 셸이다. <a href="https://ohmyz.sh" target="_blank" rel="noreferrer">Oh My Zsh</a>는 Zsh에 확장 및 구성을 관리해주는 프레임워크이며 Zsh를 설치할 때 함께 설치하는 경우가 많다.</p><h2 id="zsh-설치" tabindex="-1">Zsh 설치 <a class="header-anchor" href="#zsh-설치" aria-label="Permalink to &quot;Zsh 설치&quot;">​</a></h2><h3 id="ubuntu-계열" tabindex="-1">Ubuntu 계열 <a class="header-anchor" href="#ubuntu-계열" aria-label="Permalink to &quot;Ubuntu 계열&quot;">​</a></h3><p><code>apt</code> 패키지 관리자 명령어로 <code>Zsh</code>를 설치한다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zsh</span></span></code></pre></div><h3 id="macos" tabindex="-1">macOS <a class="header-anchor" href="#macos" aria-label="Permalink to &quot;macOS&quot;">​</a></h3><p>macOS의 최신 버전 부터는 <code>Zsh</code>이 기본 로그인 셸로 동작한다. 따라서 최신 버전을 사용하고 별다른 설정을 하지 않았다면 별도로 설치할 필요가 없다. 만약 설치되어있지 않다면 수동으로 설치해줄 수 있다. 설치를 위해서는 <code>brew</code>가 사전에 설치되어있어야 한다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zsh</span></span></code></pre></div><h3 id="설치-후-기본-셸을-zsh로-전환하기" tabindex="-1">설치 후 기본 셸을 Zsh로 전환하기 <a class="header-anchor" href="#설치-후-기본-셸을-zsh로-전환하기" aria-label="Permalink to &quot;설치 후 기본 셸을 Zsh로 전환하기&quot;">​</a></h3><p><code>chsh</code> 명령어를 이용하여 기본 로그인 셸을 변경할 수 있다. 명령을 실행한 현재 사용자에게만 적용된다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chsh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">which</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zsh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>제대로 설정이 반영되려면 터미널 앱을 껐다가 켜야 할 수 있다.</p><h2 id="oh-my-zsh-설치" tabindex="-1">Oh My Zsh 설치 <a class="header-anchor" href="#oh-my-zsh-설치" aria-label="Permalink to &quot;Oh My Zsh 설치&quot;">​</a></h2><p><code>curl</code> 또는 <code>wget</code> 명령어로 설치할 수 있으며 <code>curl</code>, <code>wget</code>은 기본 명령어가 아닐 수 있으므로 사전에 설치해야할 수 있다.</p><p><code>Zsh</code>를 활성화할 때와 마찬가지로 <code>Oh My Zsh</code>를 활성화할 사용자의 터미널에서 아래 명령을 실행한다. 다른 사용자에도 적용하려면 각자 명령을 실행해야 한다.</p><h3 id="curl-명령어로-설치" tabindex="-1"><code>curl</code> 명령어로 설치 <a class="header-anchor" href="#curl-명령어로-설치" aria-label="Permalink to &quot;`curl` 명령어로 설치&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span></span></code></pre></div><h3 id="wget-명령어로-설치" tabindex="-1"><code>wget</code> 명령어로 설치 <a class="header-anchor" href="#wget-명령어로-설치" aria-label="Permalink to &quot;`wget` 명령어로 설치&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-O</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -)&quot;</span></span></code></pre></div><h2 id="설치-이후" tabindex="-1">설치 이후 <a class="header-anchor" href="#설치-이후" aria-label="Permalink to &quot;설치 이후&quot;">​</a></h2><p>설치 후 <code>~/.zshrc</code> 파일을 편집하여 <code>Zsh</code>를 사용자 지정할 수 있다.</p><p>상단의 <code>ZSH_THEME</code> 값을 변경하여 원하는 <code>Zsh</code> 테마를 지정할 수 있다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Set name of the theme to load --- if set to &quot;random&quot;, it will</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># load a random theme each time oh-my-zsh is loaded, in which case,</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># to know which specific one was loaded, run: echo $RANDOM_THEME</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#ZSH_THEME=&quot;agnoster&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ZSH_THEME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;simple&quot;</span></span></code></pre></div><p><code>Zsh</code>에서 Home/End 키가 정상 동작하지 않는 경우 <code>.zshrc</code> 하단에 다음 내용을 추가한다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bindkey</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\033[1~&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> beginning-of-line</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bindkey</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\033[4~&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> end-of-line</span></span></code></pre></div><p>설정을 편집한 후에는 다음 명령을 실행하여 적용한다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.zshrc</span></span></code></pre></div>',28)])])}const g=a(t,[["render",l]]);export{r as __pageData,g as default};
