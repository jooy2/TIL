import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.CwVs45hf.js";const g=JSON.parse('{"title":"Dart 모든 문자열 콘솔에 출력하기","description":"","frontmatter":{},"headers":[],"relativePath":"language/dart/print-all-strings.md","filePath":"language/dart/print-all-strings.md","lastUpdated":1757324605000}'),p={name:"language/dart/print-all-strings.md"};function l(e,s,h,k,r,d){return t(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="dart-모든-문자열-콘솔에-출력하기" tabindex="-1">Dart 모든 문자열 콘솔에 출력하기 <a class="header-anchor" href="#dart-모든-문자열-콘솔에-출력하기" aria-label="Permalink to &quot;Dart 모든 문자열 콘솔에 출력하기&quot;">​</a></h1><p>Dart 및 Flutter에서는 문자열을 <code>print</code>나 <code>debugPrint</code>를 사용하여 출력하면 글자 수 제한으로 인해 일부 텍스트가 잘리는 경우가 있다.</p><p>이럴 때는 몇가지 대안을 사용하여 콘솔에 모든 문자열이 표시되도록 할 수 있다.</p><p>먼저 <code>print</code> 대신 <code>log</code> 함수를 사용하여 문자열을 출력하는 방법이 있다.</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;dart:developer&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;string&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>다음으로, 아래와 같이 사용자 지정 <code>print</code> 함수를 만들어 사용하는 방법이 있다. 개인적으로 가장 확실한 효과를 보이는 것 같다.</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> printWrapped</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> text) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  final</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pattern </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RegExp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.{1,800}&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  pattern.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">allMatches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((match) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(match.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">printWrapped</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;string&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,7)])])}const c=i(p,[["render",l]]);export{g as __pageData,c as default};
