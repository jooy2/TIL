import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.CwVs45hf.js";const c=JSON.parse('{"title":"Dart Pub 패키지 출시","description":"","frontmatter":{},"headers":[],"relativePath":"language/dart/pub-publish.md","filePath":"language/dart/pub-publish.md","lastUpdated":1728269166000}'),l={name:"language/dart/pub-publish.md"};function p(n,s,h,d,r,k){return t(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="dart-pub-패키지-출시" tabindex="-1">Dart Pub 패키지 출시 <a class="header-anchor" href="#dart-pub-패키지-출시" aria-label="Permalink to &quot;Dart Pub 패키지 출시&quot;">​</a></h1><p>Dart에서는 <a href="https://pub.dev" target="_blank" rel="noreferrer">pub.dev</a>라는 패키지 저장소가 있다. 여기에 자신이 원하는 모듈 패키지를 업로드할 수 있다.</p><p>먼저 패키지 업로드 전 주의해야 할 점들이 있다. 일부 유의사항을 따르지 않으면 Pub point 점수가 낮을 수 있다.</p><ul><li><code>pubspec.yaml</code> 파일이 프로젝트 상단에 올바르게 존재해야 하며 홈페이지, 이슈, 설명 등의 메타 정보가 포함되어야 한다.</li><li><code>README.md</code>와 <code>CHANGELOG.md</code>, <code>LICENSE.md</code> 파일이 각각 프로젝트 상단에 위치해야 한다.</li><li>예제 파일이 프로젝트 최상단에 위치해야 한다. (예제 파일은 example 폴더에 있어야 한다.)</li><li>API 함수에는 문서가 포함되어야 한다.</li></ul><p>사용자에게 제공되는 함수에 문서를 포함하려면 메소드 상단에 <code>///</code> 주석을 포함한다.</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/// Returns with &#39;hello&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> testFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> str) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Dart 코드 아래 명령어로 dart 코드 규칙에 따라 포맷팅한다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> format</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><p>아래 명령어로 패키지를 출시할 수 있다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> publish</span></span></code></pre></div><p>이 과정에서 패키지 유효성을 검사하고 업로드 권한을 파악하기 위해 로그인을 진행한다. 만약 실제로 패키지를 출시하지 않고 시험적으로 배포 결과를 보고 싶다면 다음 옵션과 함께 사용한다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> publish</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dry-run</span></span></code></pre></div>`,12)])])}const g=i(l,[["render",p]]);export{c as __pageData,g as default};
